What’s actually happening
CodeMirror draws its caret with a 1 px‑wide left border on the .cm‑cursor element and animates that border color to create the blink.

In Chromium‑based browsers a long‑standing rounding bug means that when the element’s X‑coordinate doesn’t fall exactly on the physical‑pixel grid, a 1 px border can be rounded down to 0 px and vanish.

At 90 % zoom the editor is scaled, the caret’s X‑position is no longer right on the pixel boundary, the border rounds up to 1 px and you see it.

At 100 % (or some other zoom levels) it lands exactly on the boundary, the border rounds to 0 and the caret disappears.

The issue is documented in several CodeMirror/GitHub threads – the usual workaround is simply “make the border wider”. 
github

Your stylesheet removes that border and replaces it with a ::after pseudo‑element that is absolutely positioned inside an element whose own width is 0.

When the caret’s sub‑pixel position rounds down to an integral value the containing element’s height or width can also collapse to 0, so the pseudo‑element has nothing to draw into and vanishes at exactly the same zoom levels.

Two clean fixes
Fix	When to use	Minimal CSS patch
Let CodeMirror keep its own caret but widen the border (simplest, battle‑tested)	You’re happy with a 1‑line change and don’t need a fancy cursor	css .cm-cursor { border-left: 2px solid hsl(var(--editor-cursor)) !important; /* 2 – 3 px works on all zoom levels */ margin-left: -1px; /* keep it centred */ animation: cm-blink 1.06s steps(1) infinite; }
Keep your custom ::after caret	You really want the thicker coloured bar	css /* stop CodeMirror’s own blink so it doesn’t toggle opacity underneath you */ .cm-cursor { border-left: none !important; animation: none !important; position: relative; } .cm-cursor::after { content: ''; position: absolute; inset: 0; /* top:0; right:0; bottom:0; left:0 */ width: 3px; background: hsl(var(--editor-cursor)); animation: cursor-blink 1s step-end infinite; z-index: 5; /* keep it above the text */ }
Either approach removes the sub‑pixel rounding problem, so the caret stays visible at all browser zoom levels.

Extra tips
Only one blink animation – running both CodeMirror’s default blink and your own can produce “half‑speed” blinking or flicker. Disable one of them (see second patch above).

Avoid 1 px borders for UI elements you can’t afford to lose; use ≥ 2 px or draw the element with background instead of border.

If you ever need a thinner caret again you can use transform: scaleX(0.5) on the 2 px border – scaling is immune to that Chrome rounding bug.

Apply the patch that fits your design preference, refresh, and the cursor should blink happily at 100 %, 90 %, or any other zoom level.